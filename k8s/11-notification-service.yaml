apiVersion: v1
kind: Secret
metadata:
  name: notification-service-secret
  namespace: notification-service
type: Opaque
data:
  JWT_SECRET: eW91ci1zZWNyZXQta2V5LWNoYW5nZS1pbi1wcm9kdWN0aW9u  # your-secret-key-change-in-production

---
apiVersion: v1
kind: Secret
metadata:
  name: notification-service-db-secret
  namespace: notification-service
type: Opaque
data:
  POSTGRES_DB: bm90aWZpY2F0aW9uX3NlcnZpY2U=  # notification_service
  POSTGRES_USER: cG9zdGdyZXM=                # postgres
  POSTGRES_PASSWORD: cGFzc3dvcmQ=            # password

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: notification-service-config
  namespace: notification-service
data:
  PORT: "8085"
  ENVIRONMENT: "production"
  LOG_LEVEL: "info"
  AUTO_MIGRATE: "true"
  SEED_DATA: "true"
  DATABASE_URL: "postgres://postgres:password@notification-service-postgres.notification-service.svc.cluster.local:5432/notification_service?sslmode=disable"
  RABBITMQ_URL: "amqp://admin:admin@rabbitmq.system.svc.cluster.local:5672/"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: notification-service-db-config
  namespace: notification-service
data:
  POSTGRES_DB: notification_service
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service-postgres
  namespace: notification-service
  labels:
    app: notification-service-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification-service-postgres
  template:
    metadata:
      labels:
        app: notification-service-postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        envFrom:
        - configMapRef:
            name: notification-service-db-config
        - secretRef:
            name: notification-service-db-secret
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: notification-service-postgres-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: notification-service-postgres-pvc
  namespace: notification-service
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---
apiVersion: v1
kind: Service
metadata:
  name: notification-service-postgres
  namespace: notification-service
  labels:
    app: notification-service-postgres
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
  selector:
    app: notification-service-postgres

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: notification-service
  labels:
    app: notification-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
    spec:
      containers:
      - name: notification-service
        image: alexinteam/report-system-notification-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8085
        envFrom:
        - configMapRef:
            name: notification-service-config
        - secretRef:
            name: notification-service-secret
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8085
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8085
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: notification-service-service
  namespace: notification-service
  labels:
    app: notification-service
spec:
  type: ClusterIP
  ports:
  - port: 8085
    targetPort: 8085
    protocol: TCP
  selector:
    app: notification-service
